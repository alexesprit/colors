var searchModuleIndex = ["runner.work.colors.colors",];
var searchIndex = ["RGB","contrast_ratio","contrast_score","eq","eq_approx","grayscale","gx","hex","hsl","hsv","invert","is_dark","is_light","luminance","str","HSL","darken","desaturate","eq","eq_approx","gx","hsv","lighten","rgb","rotate","saturate","str","HSV","eq","eq_approx","gx","hsl","rgb","str","from","parse","eq_rgb_gx","rgb_from_gx","hsl_from_gx","hsv_from_gx",];
var searchModuleData = [["","runner.work.colors.colors.html"],];
var searchData = [["runner.work.colors.colors"," Structure representing RGB color model. ","runner.work.colors.colors.html#RGB","struct "],["runner.work.colors.colors"," contrast_ratio returns a contrast ratio between two colors. ","runner.work.colors.colors.html#RGB.contrast_ratio","fn (RGB)"],["runner.work.colors.colors"," contrast_score returns a contrast score between two colors. ","runner.work.colors.colors.html#RGB.contrast_score","fn (RGB)"],["runner.work.colors.colors"," eq checks if a given RGB struct is equal to a caller. ","runner.work.colors.colors.html#RGB.eq","fn (RGB)"],["runner.work.colors.colors"," eq_approx checks if a given RGB struct is approximalely equal to a caller. ","runner.work.colors.colors.html#RGB.eq_approx","fn (RGB)"],["runner.work.colors.colors"," grayscale returns a grayscale color from a true color. ","runner.work.colors.colors.html#RGB.grayscale","fn (RGB)"],["runner.work.colors.colors"," gx converts RGB to gx.Color structure. ","runner.work.colors.colors.html#RGB.gx","fn (RGB)"],["runner.work.colors.colors"," hex returns a string representation of RGB struct in hexadecimal format. ","runner.work.colors.colors.html#RGB.hex","fn (RGB)"],["runner.work.colors.colors"," hsl converts RGB to HSL. ","runner.work.colors.colors.html#RGB.hsl","fn (RGB)"],["runner.work.colors.colors"," hsl converts RGB to HSV. ","runner.work.colors.colors.html#RGB.hsv","fn (RGB)"],["runner.work.colors.colors"," invert inverts a color. ","runner.work.colors.colors.html#RGB.invert","fn (RGB)"],["runner.work.colors.colors"," is_light checks if a color is dark. ","runner.work.colors.colors.html#RGB.is_dark","fn (RGB)"],["runner.work.colors.colors"," is_light checks if a color is light. ","runner.work.colors.colors.html#RGB.is_light","fn (RGB)"],["runner.work.colors.colors"," luminance returns a relative luminance of a color. ","runner.work.colors.colors.html#RGB.luminance","fn (RGB)"],["runner.work.colors.colors"," str returns a string representation of a RGB struct. ","runner.work.colors.colors.html#RGB.str","fn (RGB)"],["runner.work.colors.colors"," Structure representing HSL color model. ","runner.work.colors.colors.html#HSL","struct "],["runner.work.colors.colors"," darken changes lightness of a given HSL struct and returns new struct. ","runner.work.colors.colors.html#HSL.darken","fn (HSL)"],["runner.work.colors.colors"," desaturate changes saturation of a given HSL struct and returns new struct. ","runner.work.colors.colors.html#HSL.desaturate","fn (HSL)"],["runner.work.colors.colors"," eq checks if a given HSL struct is equal to a caller. ","runner.work.colors.colors.html#HSL.eq","fn (HSL)"],["runner.work.colors.colors"," eq_approx checks if a given HSL struct is approximalely equal to a caller. ","runner.work.colors.colors.html#HSL.eq_approx","fn (HSL)"],["runner.work.colors.colors"," gx converts HSL to gx.Color structure. ","runner.work.colors.colors.html#HSL.gx","fn (HSL)"],["runner.work.colors.colors"," hsl converts HSL to HSV. ","runner.work.colors.colors.html#HSL.hsv","fn (HSL)"],["runner.work.colors.colors"," lighten changes lightness of a given HSL struct and returns new struct. ","runner.work.colors.colors.html#HSL.lighten","fn (HSL)"],["runner.work.colors.colors"," hsl converts HSL to RGB. ","runner.work.colors.colors.html#HSL.rgb","fn (HSL)"],["runner.work.colors.colors"," rotate changes hue of a given HSL struct and returns new struct. ","runner.work.colors.colors.html#HSL.rotate","fn (HSL)"],["runner.work.colors.colors"," saturate changes saturation of a given HSL struct and returns new struct. ","runner.work.colors.colors.html#HSL.saturate","fn (HSL)"],["runner.work.colors.colors"," str returns a string representation of a HSL struct. ","runner.work.colors.colors.html#HSL.str","fn (HSL)"],["runner.work.colors.colors"," Structure representing HSV color model. ","runner.work.colors.colors.html#HSV","struct "],["runner.work.colors.colors"," eq checks if a given HSV struct is equal to a caller. ","runner.work.colors.colors.html#HSV.eq","fn (HSV)"],["runner.work.colors.colors"," eq_approx checks if a given HSV struct is approximalely equal to a caller. ","runner.work.colors.colors.html#HSV.eq_approx","fn (HSV)"],["runner.work.colors.colors"," gx converts HSL to gx.Color structure. ","runner.work.colors.colors.html#HSV.gx","fn (HSV)"],["runner.work.colors.colors"," hsl converts HSV to HSL. ","runner.work.colors.colors.html#HSV.hsl","fn (HSV)"],["runner.work.colors.colors"," rgb converts HSV to RGB. ","runner.work.colors.colors.html#HSV.rgb","fn (HSV)"],["runner.work.colors.colors"," str returns a string representation of a HSV struct. ","runner.work.colors.colors.html#HSV.str","fn (HSV)"],["runner.work.colors.colors"," from returns an RGB color model from an integer representation. ","runner.work.colors.colors.html#from","fn "],["runner.work.colors.colors"," parse parses a given string and returns an RGB color model. ","runner.work.colors.colors.html#parse","fn "],["runner.work.colors.colors"," eq_rgb_gx checks if a given RGB and gx.Color structures are equal. ","runner.work.colors.colors.html#eq_rgb_gx","fn "],["runner.work.colors.colors"," rgb_from_gx converts gx.Color structure to RGB structure. ","runner.work.colors.colors.html#rgb_from_gx","fn "],["runner.work.colors.colors"," rgb_from_gx converts gx.Color structure to HSL structure. ","runner.work.colors.colors.html#hsl_from_gx","fn "],["runner.work.colors.colors"," rgb_from_gx converts gx.Color structure to HSV structure. ","runner.work.colors.colors.html#hsv_from_gx","fn "],];
